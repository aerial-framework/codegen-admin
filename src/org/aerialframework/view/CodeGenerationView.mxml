<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="org.aerialframework.components.*"
          width="100%">

    <mx:HDividedBox width="100%" height="100%">
        <mx:VDividedBox height="100%">
            <s:Panel width="100%" height="100%" dropShadowVisible="false" title="Existing PHP Models">
                <s:layout>
                    <s:VerticalLayout paddingBottom="8" paddingLeft="8" paddingRight="8" paddingTop="8"/>
                </s:layout>

                <s:List id="modelsList" width="100%" height="100%" allowMultipleSelection="true" minWidth="300"
                        borderColor="#D9D9D9" useVirtualLayout="false" change="modelSelectionHandler(event)"
                        itemRenderer="org.aerialframework.renderer.QuickDiffListItemRenderer" labelField="name">
                </s:List>
            </s:Panel>

            <s:Panel id="generationPanel" width="100%" dropShadowVisible="false" title="Code Generation">
                <s:layout>
                    <s:VerticalLayout gap="4" paddingBottom="8" paddingLeft="8" paddingRight="8"
                                      paddingTop="8"/>
                </s:layout>

                <s:HGroup width="100%" gap="15">
                    <s:Image source="@Embed('../../../assets/icons/application-x-php.png')"/>
                    <s:CheckBox id="phpModelsCheck" width="90" label="PHP Models"/>
                    <s:CheckBox id="phpServicesCheck" label="PHP Services"/>
                </s:HGroup>

                <s:HGroup width="100%" verticalAlign="middle" gap="0">
                    <s:Line width="100%">
                        <s:stroke>
                            <s:SolidColorStroke color="#BBBBBB" alpha="0.3"/>
                        </s:stroke>
                    </s:Line>
                </s:HGroup>

                <s:HGroup width="100%" gap="15">
                    <s:Image source="@Embed('../../../assets/icons/flash.png')"/>
                    <s:CheckBox id="as3ModelsCheck" width="90" label="AS3 Models"/>
                    <s:CheckBox id="as3ServicesCheck" label="AS3 Services"/>
                </s:HGroup>

                <s:HGroup width="100%" verticalAlign="middle" gap="0">
                    <s:Line width="100%">
                        <s:stroke>
                            <s:SolidColorStroke color="#BBBBBB" alpha="0.3"/>
                        </s:stroke>
                    </s:Line>
                </s:HGroup>

                <s:HGroup width="100%" gap="15">
                    <s:Image source="@Embed('../../../assets/icons/flash.png')"/>
                    <s:CheckBox id="bootstrapCheck" width="90" label="Bootstrap"/>
                </s:HGroup>

                <s:Spacer height="100%"/>

                <mx:Button id="generateBtn" width="100%" label="Generate" chromeColor="#0E65A8"
                           fontWeight="bold" icon="@Embed('../../../assets/icons/visualization.png')"
                           paddingBottom="6" paddingLeft="12" paddingRight="12" paddingTop="6"
                           click="generate()"/>
                <mx:Button width="100%" label="Regenerate database tables"
                           chromeColor="#44A80E" fontWeight="bold"
                           icon="@Embed('../../../assets/icons/revert.png')" paddingBottom="6"
                           paddingLeft="12" paddingRight="12" paddingTop="6"/>
            </s:Panel>
        </mx:VDividedBox>

        <mx:VDividedBox width="100%" height="100%">
            <s:Panel width="100%" height="100%" dropShadowVisible="false" title="Information">
                <s:layout>
                    <s:VerticalLayout paddingBottom="8" paddingLeft="8" paddingRight="8" paddingTop="8"/>
                </s:layout>

                <components:ModelDefinitionView id="modelDefinitionsView" width="100%" height="100%"/>
            </s:Panel>

            <s:Panel id="optionsPanel" width="100%" dropShadowVisible="false" title="Code Generation Options">
                <s:layout>
                    <s:VerticalLayout paddingBottom="8" paddingLeft="8" paddingRight="8" paddingTop="8"/>
                </s:layout>

                <s:HGroup width="100%">
                    <mx:Form width="100%" height="100%">
                        <mx:FormItem width="100%" label="ActionScript Source Path">
                            <s:HGroup width="100%" verticalAlign="middle">
                                <s:TextInput id="as3SourcePathTxt" width="100%"/>
                                <s:Button label="Browse"/>
                            </s:HGroup>
                        </mx:FormItem>

                        <mx:FormItem width="100%" label="PHP Source Path">
                            <s:HGroup width="100%" verticalAlign="middle">
                                <s:TextInput id="phpSourcePathTxt" width="100%"/>
                                <s:Button label="Browse"/>
                            </s:HGroup>
                        </mx:FormItem>
                    </mx:Form>

                    <mx:Form width="100%" height="100%">
                        <mx:FormItem width="100%" label="Package">
                            <s:TextInput id="packageTxt" width="100%" restrict="[a-zA-Z0-9\.\_]"/>
                        </mx:FormItem>

                        <mx:FormItem width="100%" label="Models Suffix">
                            <s:TextInput id="voSuffixTxt" width="100%"/>
                        </mx:FormItem>

                        <mx:FormItem width="100%" label="Services Suffix">
                            <s:TextInput id="serviceSuffixTxt" width="100%"/>
                        </mx:FormItem>
                    </mx:Form>
                </s:HGroup>

                <s:Spacer height="100%"/>

                <mx:Button width="100%" label="Save Options" chromeColor="#0E65A8"
                           fontWeight="bold" icon="@Embed('../../../assets/icons/visualization.png')"
                           paddingBottom="6" paddingLeft="12" paddingRight="12" paddingTop="6"/>
            </s:Panel>
        </mx:VDividedBox>
    </mx:HDividedBox>

    <fx:Script>
        <![CDATA[
        import com.mysql.workbench.model.Column;
        import com.mysql.workbench.model.Schema;
        import com.mysql.workbench.model.Table;

        import mx.collections.ArrayList;

        import org.aerialframework.controller.ProjectController;

        import org.aerialframework.model.FieldDefinition;

        import org.aerialframework.model.ModelDefinition;
        import org.aerialframework.renderer.QuickDiffListItemRenderer;

        import spark.events.IndexChangeEvent;

        private var _schema:Schema;

        private function modelSelectionHandler(event:IndexChangeEvent):void
        {
            if(!modelsList.selectedItem && modelsList.selectedItems.length == 0)
            {
                modelDefinitionsView.definitions = new ArrayList();
                return;
            }

            if(modelsList.selectedItems.length > 1)
            {
                modelDefinitionsView.displayMode = ModelDefinitionView.MULTIPLE;

                // modelsList.selectedItems is a Vector, and ArrayList needs an Array
                var selectedModels:Array = vectorToArray(modelsList.selectedItems);

                modelDefinitionsView.definitions = new ArrayList(selectedModels);
            }
            else
            {
                modelDefinitionsView.displayMode = ModelDefinitionView.SINGLE;

                modelDefinitionsView.definitions = new ArrayList(modelsList.selectedItem.fields);
            }
        }

        /**
         * Thanks Jack!
         * @see http://jacksondunstan.com/articles/192
         */
        private function vectorToArray(v:Object):Array
        {
            var len:int = v.length;
            var ret:Array = new Array(len);
            for(var i:int = 0; i < len; ++i)
            {
                ret[i] = v[i];
            }
            return ret;
        }

        private function generate():void
        {
            var tables:Array = [];
            for each(var modelDef:ModelDefinition in this.modelsList.selectedItems)
                tables.push(modelDef.tableName);
            
//            ProjectController.instance.generate("php-doctrine", this.schema, tables);
        }

        public function set schema(schema:Schema):void
        {
            _schema = schema;

            processSchema();
        }

        public function get schema():Schema
        {
            return _schema;
        }

        private function processSchema():void
        {
            var models:Array = [];
            for each(var table:Table in schema.tables)
            {
                var model:ModelDefinition = new ModelDefinition();
                model.fields = [];
                model.tableName = table.name;
                model.modelName = table.className;

                for each(var column:Column in table.columns)
                {
                    var field:FieldDefinition = new FieldDefinition();
                    field.name = column.name;
                    field.type = getAS3Type(column.rawType);

                    model.fields.push(field);
                }

                models.push(model);
            }

            models = models.sortOn("modelName");

            this.modelsList.dataProvider = new ArrayList(models);
        }

        private function getAS3Type(type:String, unsigned:Boolean = false):String
        {
            var as3type:String = "";
            switch(type)
            {
                case 'integer':
                    as3type = unsigned ? "uint" : "int";
                    break;
                case 'decimal':
                case 'float':
                case 'double':
                    as3type = "Number";
                    break;
                case 'set':
                case 'array':
                    as3type = "Array";
                    break;
                case 'boolean':
                    as3type = "Boolean";
                    break;
                case 'blob':
                    as3type = "ByteArray";
                    break;
                case 'object':
                    as3type = "Object";
                    break;
                case 'time':
                case 'timestamp':
                case 'date':
                case 'datetime':
                    as3type = "Date";
                    break;
                case 'enum':
                case 'gzip':
                case 'string':
                case 'clob':
                    as3type = "String";
                    break;
                default:
                    as3type = type;
                    break;
            }

            return as3type;
        }
        ]]>
    </fx:Script>

</s:VGroup>
